[1/7] Performing build step for 'bootloader'
[0/1] Re-running CMake...
-- Building ESP-IDF components for target esp32
-- Project sdkconfig file /home/ubuntu/CLionProjects/Display_Test/sdkconfig
-- Compiler supported targets: xtensa-esp-elf
-- Adding linker script /home/ubuntu/esp/esp-idf/components/soc/esp32/ld/esp32.peripherals.ld
-- Bootloader project name: "bootloader" version: 1
-- Adding linker script /home/ubuntu/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.ld
-- Adding linker script /home/ubuntu/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.api.ld
-- Adding linker script /home/ubuntu/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.libgcc.ld
-- Adding linker script /home/ubuntu/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.newlib-funcs.ld
-- Adding linker script /home/ubuntu/esp/esp-idf/components/bootloader/subproject/main/ld/esp32/bootloader.ld
-- Adding linker script /home/ubuntu/esp/esp-idf/components/bootloader/subproject/main/ld/esp32/bootloader.rom.ld
-- Components: bootloader bootloader_support efuse esp_app_format esp_bootloader_format esp_common esp_hw_support esp_rom esp_system esptool_py freertos hal log main micro-ecc newlib partition_table soc spi_flash xtensa
-- Component paths: /home/ubuntu/esp/esp-idf/components/bootloader /home/ubuntu/esp/esp-idf/components/bootloader_support /home/ubuntu/esp/esp-idf/components/efuse /home/ubuntu/esp/esp-idf/components/esp_app_format /home/ubuntu/esp/esp-idf/components/esp_bootloader_format /home/ubuntu/esp/esp-idf/components/esp_common /home/ubuntu/esp/esp-idf/components/esp_hw_support /home/ubuntu/esp/esp-idf/components/esp_rom /home/ubuntu/esp/esp-idf/components/esp_system /home/ubuntu/esp/esp-idf/components/esptool_py /home/ubuntu/esp/esp-idf/components/freertos /home/ubuntu/esp/esp-idf/components/hal /home/ubuntu/esp/esp-idf/components/log /home/ubuntu/esp/esp-idf/components/bootloader/subproject/main /home/ubuntu/esp/esp-idf/components/bootloader/subproject/components/micro-ecc /home/ubuntu/esp/esp-idf/components/newlib /home/ubuntu/esp/esp-idf/components/partition_table /home/ubuntu/esp/esp-idf/components/soc /home/ubuntu/esp/esp-idf/components/spi_flash /home/ubuntu/esp/esp-idf/components/xtensa
-- Configuring done (1.4s)
-- Generating done (0.0s)
-- Build files have been written to: /home/ubuntu/CLionProjects/Display_Test/build/bootloader
[1/1] cd /home/ubuntu/CLionProjects/Display_Test/build/bootloader/esp-idf/esptool_py && /home/ubuntu/.espressif/python_env/idf5.2_py3.12_env/bin/python /home/ubuntu/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/ubuntu/CLionProjects/Display_Test/build/bootloader/bootloader.bin
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/7] No install step for 'bootloader'
[3/7] Completed 'bootloader'
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable main.elf
[6/7] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/ubuntu/CLionProjects/Display_Test/build/main.bin
[7/7] cd /home/ubuntu/CLionProjects/Display_Test/build/esp-idf/esptool_py && /home/ubuntu/.espressif/python_env/idf5.2_py3.12_env/bin/python /home/ubuntu/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ubuntu/CLionProjects/Display_Test/build/partition_table/partition-table.bin /home/ubuntu/CLionProjects/Display_Test/build/main.bin
main.bin binary size 0x2afd0 bytes. Smallest app partition is 0x100000 bytes. 0xd5030 bytes (83%) free.
